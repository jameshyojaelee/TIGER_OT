╔══════════════════════════════════════════════════════════════════════════════╗
║                                                                              ║
║           ✅ TIGER WORKFLOW - FULLY OPERATIONAL AND READY TO USE ✅         ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝

Date: 2025-09-30
Status: 🎉 All Components Tested and Working

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

PRE-FLIGHT CHECK RESULTS:

  ✅ Test 1: Wrapper Script (scripts/00_load_environment.sh)
  ✅ Test 2: Python Environment (Python 3.12.3)
  ✅ Test 3: Python Packages (TensorFlow 2.17.0, NumPy 1.26.4, Pandas 2.2.2)
  ✅ Test 4: TIGER Core Files (src/lib/tiger_core/)
  ✅ Test 5: TIGER Model Files (resources/models/tiger_model/)
  ✅ Test 6: Workflow Script (run_tiger.py loads)
  ✅ Test 7: Configuration File (configs/default.yaml valid)
  ✅ Test 8: Off-Target Binary (bin/offtarget_search)
  ✅ Test 9: Reference Datasets (configs/default.yaml + transcriptomes reachable)

  Result: 9/9 PASSED ✅

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

INTEGRATED FEATURES:

  1. ✅ TIGER Integration - Fully independent (no external dependencies)
  2. ✅ MM0 >= 1 Fix - Only valid guides selected
  3. ✅ Score-First Filtering - High-quality guides prioritized (>= 0.80)
  4. ✅ MM0 Tolerance - Flexible MM0 filtering (min to min+3)
  5. ✅ MM0 Location Validation - Analyzes same-gene vs cross-gene matches

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

TO RUN THE WORKFLOW:

  cd /gpfs/commons/groups/sanjana_lab/Cas13/TIGER
  
  # Create targets file
  cat > my_targets.txt <<EOT
  Abcb11
  Abhd5
  Pnpla3
  Pcsk9
  Plin3
  Plin2
  Pnpla2
  EOT
  
  # Run workflow (single-line launcher wraps the environment)
  scripts/04_run_workflow.sh my_targets.txt --species mouse
  
  # Or use the bundled smoke test (trimmed seven-gene reference: Abcb11, Abhd5, Pnpla3, Pcsk9, Plin3, Plin2, Pnpla2)
  scripts/04_run_workflow.sh examples/targets/test_targets.txt --species mouse --config configs/smoke-test.yaml --output-dir runs/smoke --skip-validation
  
  # Check results
  head runs/latest/final_guides.csv
  head runs/smoke/final_guides.csv  # Smoke-test output
  less runs/latest/mm0_location_analysis.csv  # If validation enabled

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

CURRENT CONFIGURATION (configs/default.yaml):

  filtering:
    min_guide_score: 0.80    # High-quality threshold
    mm0_tolerance: 3         # Flexible MM0 filtering
    mm1_threshold: 0         # No 1-mismatch off-targets
    mm2_threshold: 0         # No 2-mismatch off-targets
    adaptive_mm0: true       # Minimum MM0 per gene
    top_n_guides: 10         # Guides per gene
  
  output:
    validate_mm0_locations: true  # Analyze MM0 locations

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

QUALITY GUARANTEES:

  All final guides have:
    ✅ Score >= 0.80 (high-quality TIGER predictions)
    ✅ MM0 >= 1 (match at least their intended target)
    ✅ MM1 = 0 (no 1-mismatch off-targets)
    ✅ MM2 = 0 (no 2-mismatch off-targets)
    ✅ MM0 in [min, min+3] per gene (specificity with flexibility)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

KEY SCRIPTS:

  scripts/04_run_workflow.sh --species {mouse,human}  - Single-line launcher (recommended)
  scripts/00_load_environment.sh  - Environment wrapper (advanced)
  scripts/03_preflight_check.sh  - Test all components
  run_tiger.py           - Main workflow script
  configs/default.yaml            - Configuration (edit settings here)
  resources/reference/gencode.vM37.transcripts.uc.joined  - Mouse transcriptome (replace for production runs)
  resources/reference/gencode.v47.transcripts.fa         - Human transcriptome (copied automatically if available)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

DOCUMENTATION:

  📖 docs/READY_TO_USE.md      - Quick start (READ THIS FIRST!)
  📖 docs/WORKFLOW_GUIDE.md    - Complete guide
  📖 README.md                 - Full workflow documentation
  📖 docs/UPDATE_SUMMARY.txt   - Recent changes

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

QUICK COMMANDS:

  # Run workflow
  scripts/04_run_workflow.sh targets.txt --species mouse
  
  # Bundled smoke test
  scripts/04_run_workflow.sh examples/targets/test_targets.txt --species mouse --config configs/smoke-test.yaml --output-dir runs/smoke --skip-validation
  
  # GPU run (set module as needed)
  TIGER_USE_GPU=1 TIGER_TF_GPU_MODULE=TensorFlow/2.15.1-gpu scripts/04_run_workflow.sh targets.txt --species mouse --threads 8
  
  # Dry run (preview)
  scripts/04_run_workflow.sh targets.txt --species mouse --dry-run
  
  # Test system
  scripts/03_preflight_check.sh
  
  # View help
  scripts/04_run_workflow.sh --help

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

WHAT'S NEW TODAY (2025-09-30):

  ✅ Species selector (`--species {mouse,human}`) routes Ensembl + transcriptomes automatically
  ✅ TIGER fully integrated (no external dependencies)
  ✅ MM0 >= 1 validation (excludes invalid guides)
  ✅ Score-first filtering (prioritizes high-quality guides)
  ✅ MM0 tolerance parameter (flexible filtering)
  ✅ MM0 location validation (analyzes cross-gene matches)
  ✅ Updated to min_guide_score: 0.80 (higher quality)
  ✅ Environment fully configured (vendor/venv_packages/)
  ✅ All tests passing (9/9)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

YOUR WORKFLOW IS READY! 🚀

Next step: Run with your actual targets!

  scripts/04_run_workflow.sh your_targets.txt --species {mouse,human}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Last Verified: 2025-09-30
All Tests: ✅ 9/9 Pass

╔══════════════════════════════════════════════════════════════════════════════╗
║                  WORKFLOW IS PRODUCTION READY! 🎉                            ║
╚══════════════════════════════════════════════════════════════════════════════╝
